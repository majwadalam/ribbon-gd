{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard",
  "type": "registry:block",
  "description": "dashboard component from ribbon-gd",
  "registryDependencies": [],
  "files": [
    {
      "path": "page.tsx",
      "content": "\"use client\"\n\nimport { Header } from \"@/components/header\"\nimport { V0Button } from \"@/components/v0-button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { TrendingUp, TrendingDown, Users, CreditCard, Activity, DollarSign, Download, RefreshCw } from \"lucide-react\"\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts'\nimport { useToast } from \"@/lib/use-toast\"\nimport { useState } from \"react\"\n\nconst revenueData = [\n  { month: \"Jan\", revenue: 42350, orders: 1234, customers: 856 },\n  { month: \"Feb\", revenue: 45680, orders: 1367, customers: 923 },\n  { month: \"Mar\", revenue: 48920, orders: 1456, customers: 1012 },\n  { month: \"Apr\", revenue: 52100, orders: 1523, customers: 1145 },\n  { month: \"May\", revenue: 48500, orders: 1489, customers: 1203 },\n  { month: \"Jun\", revenue: 51200, orders: 1598, customers: 1278 }\n]\n\nconst DASHBOARD_CODE = `\"use client\"\n\nimport { Header } from \"@/components/header\"\nimport { V0Button } from \"@/components/v0-button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { TrendingUp, TrendingDown, Users, CreditCard, Activity, DollarSign, Download, RefreshCw } from \"lucide-react\"\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts'\nimport { useToast } from \"@/lib/use-toast\"\nimport { useState } from \"react\"\n\nconst revenueData = [\n  { month: \"Jan\", revenue: 42350, orders: 1234, customers: 856 },\n  { month: \"Feb\", revenue: 45680, orders: 1367, customers: 923 },\n  { month: \"Mar\", revenue: 48920, orders: 1456, customers: 1012 },\n  { month: \"Apr\", revenue: 52100, orders: 1523, customers: 1145 },\n  { month: \"May\", revenue: 48500, orders: 1489, customers: 1203 },\n  { month: \"Jun\", revenue: 51200, orders: 1598, customers: 1278 }\n]\n\nexport default function Dashboard() {\n  const { toast } = useToast()\n  const [isRefreshing, setIsRefreshing] = useState(false)\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true)\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    \n    setIsRefreshing(false)\n    toast({\n      title: \"Dashboard Updated\",\n      description: \"Latest data has been refreshed successfully.\",\n    })\n  }\n\n  const handleExportData = () => {\n    // Simulate export\n    const csvData = revenueData.map(item => \\`\\${item.month},\\${item.revenue},\\${item.orders},\\${item.customers}\\`).join('\\\\n')\n    const blob = new Blob([\\`Month,Revenue,Orders,Customers\\\\n\\${csvData}\\`], { type: 'text/csv' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = 'dashboard-data.csv'\n    a.click()\n    \n    toast({\n      title: \"Export Successful\",\n      description: \"Dashboard data has been exported to CSV.\",\n    })\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Dashboard</h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Welcome back! Here's an overview of your business metrics.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleRefresh}\n            disabled={isRefreshing}\n          >\n            <RefreshCw className={\\`h-4 w-4 mr-2 \\${isRefreshing ? 'animate-spin' : ''}\\`} />\n            Refresh\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" onClick={handleExportData}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n          <V0Button \n            prompt=\"Create a Stripe-inspired dashboard with analytics cards, charts, and metrics\"\n            code={DASHBOARD_CODE}\n          />\n        </div>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">$45,231.89</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+20.1%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">2,234</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+180.1%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Transactions</CardTitle>\n            <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">12,234</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+19%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Now</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">573</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingDown className=\"h-3 w-3 text-red-500\" />\n              <span className=\"text-red-500\">-201</span>\n              <span>since last hour</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n        <Card className=\"col-span-4\">\n          <CardHeader>\n            <CardTitle>Revenue Overview</CardTitle>\n            <CardDescription>\n              Your revenue over the past 6 months\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-muted\" />\n                <XAxis \n                  dataKey=\"month\" \n                  className=\"text-muted-foreground\"\n                  fontSize={12}\n                />\n                <YAxis \n                  className=\"text-muted-foreground\"\n                  fontSize={12}\n                  tickFormatter={(value) => \\`$\\${(value / 1000).toFixed(0)}k\\`}\n                />\n                <Tooltip \n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '6px'\n                  }}\n                  formatter={(value) => [\\`$\\${value.toLocaleString()}\\`, 'Revenue']}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"revenue\" \n                  stroke=\"hsl(var(--primary))\" \n                  fill=\"hsl(var(--primary))\"\n                  fillOpacity={0.1}\n                  strokeWidth={2}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        <Card className=\"col-span-3\">\n          <CardHeader>\n            <CardTitle>Recent Activity</CardTitle>\n            <CardDescription>Latest transactions and updates</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">Payment received</p>\n                    <p className=\"text-xs text-muted-foreground\">2 minutes ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"text-md\">$2,400</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">New user registered</p>\n                    <p className=\"text-xs text-muted-foreground\">5 minutes ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"outline\" className=\"text-md\">User</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-orange-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">Payout processed</p>\n                    <p className=\"text-xs text-muted-foreground\">1 hour ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"text-md\">$5,200</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-purple-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">API key generated</p>\n                    <p className=\"text-xs text-muted-foreground\">2 hours ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"outline\" className=\"text-md\">API</Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}`\n\nexport default function Dashboard() {\n  const { toast } = useToast()\n  const [isRefreshing, setIsRefreshing] = useState(false)\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true)\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1500))\n    \n    setIsRefreshing(false)\n    toast({\n      title: \"Dashboard Updated\",\n      description: \"Latest data has been refreshed successfully.\",\n    })\n  }\n\n  const handleExportData = () => {\n    // Simulate export\n    const csvData = revenueData.map(item => `${item.month},${item.revenue},${item.orders},${item.customers}`).join('\\n')\n    const blob = new Blob([`Month,Revenue,Orders,Customers\\n${csvData}`], { type: 'text/csv' })\n    const url = window.URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = 'dashboard-data.csv'\n    a.click()\n    \n    toast({\n      title: \"Export Successful\",\n      description: \"Dashboard data has been exported to CSV.\",\n    })\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Dashboard</h1>\n          <p className=\"text-muted-foreground mt-1\">\n            Welcome back! Here's an overview of your business metrics.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleRefresh}\n            disabled={isRefreshing}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" onClick={handleExportData}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n          <V0Button \n            prompt=\"just render the ui as it is of this page , dont make any changes, just as it is\"\n            code={DASHBOARD_CODE}\n          />\n        </div>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">$45,231.89</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+20.1%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">2,234</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+180.1%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Transactions</CardTitle>\n            <CreditCard className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">12,234</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingUp className=\"h-3 w-3 text-green-500\" />\n              <span className=\"text-green-500\">+19%</span>\n              <span>from last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"card-hover\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Now</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">573</div>\n            <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n              <TrendingDown className=\"h-3 w-3 text-red-500\" />\n              <span className=\"text-red-500\">-201</span>\n              <span>since last hour</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n        <Card className=\"col-span-4\">\n          <CardHeader>\n            <CardTitle>Revenue Overview</CardTitle>\n            <CardDescription>\n              Your revenue over the past 6 months\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"stroke-muted\" />\n                <XAxis \n                  dataKey=\"month\" \n                  className=\"text-muted-foreground\"\n                  fontSize={12}\n                />\n                <YAxis \n                  className=\"text-muted-foreground\"\n                  fontSize={12}\n                  tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`}\n                />\n                <Tooltip \n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '6px'\n                  }}\n                  formatter={(value) => [`$${value.toLocaleString()}`, 'Revenue']}\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"revenue\" \n                  stroke=\"hsl(var(--primary))\" \n                  fill=\"hsl(var(--primary))\"\n                  fillOpacity={0.1}\n                  strokeWidth={2}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        <Card className=\"col-span-3\">\n          <CardHeader>\n            <CardTitle>Recent Activity</CardTitle>\n            <CardDescription>Latest transactions and updates</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">Payment received</p>\n                    <p className=\"text-xs text-muted-foreground\">2 minutes ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"text-md\">$2,400</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">New user registered</p>\n                    <p className=\"text-xs text-muted-foreground\">5 minutes ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"outline\" className=\"text-md\">User</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-orange-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">Payout processed</p>\n                    <p className=\"text-xs text-muted-foreground\">1 hour ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"secondary\" className=\"text-md\">$5,200</Badge>\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-2 h-2 bg-purple-500 rounded-full\" />\n                  <div>\n                    <p className=\"text-sm font-medium\">API key generated</p>\n                    <p className=\"text-xs text-muted-foreground\">2 hours ago</p>\n                  </div>\n                </div>\n                <Badge variant=\"outline\" className=\"text-md\">API</Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}",
      "type": "registry:page",
      "target": "app/dashboard/page.tsx"
    }
  ],
  "dependencies": [
    "recharts",
    "lucide-react"
  ],
  "devDependencies": [],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  },
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "categories": [
    "pages"
  ]
}